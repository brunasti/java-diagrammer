@startuml
'https://plantuml.com/class-diagram

' GENERATE CLASS DIAGRAM ===========
' Generator       : it.brunasti.java.diagrammer.ClassDiagrammer
' Path            : [/Users/paolo/Work/Tadaah/fp-backend-commons/fp-authentication/build/classes/java/main]
' Java Files Path : [/Users/paolo/Work/Tadaah/fp-backend-commons/fp-autentication/src/main/java/]
' Configuration   : [/Users/paolo/IdeaProjects/mine/java-diagrammer/temp/tadaah/config.json]
' Generated at    : Thu Jan 16 13:38:44 CET 2025



' CLASSES =======
class com.freelanceplaza.commons.fpauthentication.tokenhandlers.BypassTokenHandler
class com.freelanceplaza.commons.fpauthentication.AuthDecoderException
class com.freelanceplaza.commons.fpauthentication.filters.OrganizationFilter
class com.freelanceplaza.commons.fpauthentication.filters.AudienceFilter
class com.freelanceplaza.commons.fpauthentication.RemoteJwtDecoder
class com.freelanceplaza.commons.fpauthentication.http.AuthDecoderHttpClient
class com.freelanceplaza.commons.fpauthentication.config.AudienceConfig
class com.freelanceplaza.commons.fpauthentication.config.AuthDecoderConfig
class com.freelanceplaza.commons.fpauthentication.dto.JwtDto
class com.freelanceplaza.commons.fpauthentication.filters.RequiredClaimFilter
class com.freelanceplaza.commons.fpauthentication.authorityconverters.FPAuthoritiesConverter
class com.freelanceplaza.commons.fpauthentication.authorityconverters.FPAuthoritiesConverter$1

' INHERITANCES =======
java.lang.RuntimeException <|-- com.freelanceplaza.commons.fpauthentication.AuthDecoderException
java.util.HashMap <|-- com.freelanceplaza.commons.fpauthentication.authorityconverters.FPAuthoritiesConverter$1

' IMPLEMENT INTERFACE =======

' FIELDS =======
com.freelanceplaza.commons.fpauthentication.filters.OrganizationFilter --> org.springframework.security.web.authentication.AuthenticationFailureHandler
com.freelanceplaza.commons.fpauthentication.filters.OrganizationFilter --> org.springframework.security.core.context.SecurityContextHolderStrategy
com.freelanceplaza.commons.fpauthentication.filters.AudienceFilter --> com.freelanceplaza.commons.fpauthentication.config.AudienceConfig
com.freelanceplaza.commons.fpauthentication.filters.AudienceFilter --> org.springframework.security.web.authentication.AuthenticationFailureHandler
com.freelanceplaza.commons.fpauthentication.filters.AudienceFilter --> org.springframework.security.core.context.SecurityContextHolderStrategy
com.freelanceplaza.commons.fpauthentication.RemoteJwtDecoder --> com.freelanceplaza.commons.fpauthentication.http.AuthDecoderHttpClient
com.freelanceplaza.commons.fpauthentication.RemoteJwtDecoder --> com.freelanceplaza.commons.fpcommons.caching.TokenCache
com.freelanceplaza.commons.fpauthentication.RemoteJwtDecoder --> com.fasterxml.jackson.databind.ObjectMapper
com.freelanceplaza.commons.fpauthentication.http.AuthDecoderHttpClient --> com.fasterxml.jackson.databind.ObjectMapper
com.freelanceplaza.commons.fpauthentication.dto.JwtDto --> java.time.Instant
com.freelanceplaza.commons.fpauthentication.dto.JwtDto --> java.time.Instant
com.freelanceplaza.commons.fpauthentication.filters.RequiredClaimFilter --> org.springframework.security.web.authentication.AuthenticationEntryPointFailureHandler
com.freelanceplaza.commons.fpauthentication.filters.RequiredClaimFilter --> org.springframework.security.core.context.SecurityContextHolderStrategy

' USES =======
com.freelanceplaza.commons.fpauthentication.filters.OrganizationFilter ..> org.springframework.security.core.context.SecurityContextHolderStrategy
com.freelanceplaza.commons.fpauthentication.filters.OrganizationFilter ..> org.springframework.security.web.authentication.AuthenticationFailureHandler
com.freelanceplaza.commons.fpauthentication.filters.OrganizationFilter ..> jakarta.servlet.http.HttpServletRequest
com.freelanceplaza.commons.fpauthentication.filters.OrganizationFilter ..> jakarta.servlet.http.HttpServletResponse
com.freelanceplaza.commons.fpauthentication.filters.OrganizationFilter ..> jakarta.servlet.FilterChain
com.freelanceplaza.commons.fpauthentication.filters.OrganizationFilter ..> org.springframework.security.core.AuthenticationException
com.freelanceplaza.commons.fpauthentication.filters.AudienceFilter ..> org.springframework.security.core.context.SecurityContextHolderStrategy
com.freelanceplaza.commons.fpauthentication.filters.AudienceFilter ..> org.springframework.security.web.authentication.AuthenticationFailureHandler
com.freelanceplaza.commons.fpauthentication.filters.AudienceFilter ..> jakarta.servlet.http.HttpServletRequest
com.freelanceplaza.commons.fpauthentication.filters.AudienceFilter ..> jakarta.servlet.http.HttpServletResponse
com.freelanceplaza.commons.fpauthentication.filters.AudienceFilter ..> jakarta.servlet.FilterChain
com.freelanceplaza.commons.fpauthentication.filters.AudienceFilter ..> org.springframework.security.core.AuthenticationException
com.freelanceplaza.commons.fpauthentication.filters.AudienceFilter ..> com.freelanceplaza.commons.fpauthentication.config.AudienceConfig
com.freelanceplaza.commons.fpauthentication.RemoteJwtDecoder ..> org.springframework.security.oauth2.jwt.Jwt
com.freelanceplaza.commons.fpauthentication.RemoteJwtDecoder ..> com.freelanceplaza.commons.fpauthentication.http.AuthDecoderHttpClient
com.freelanceplaza.commons.fpauthentication.RemoteJwtDecoder ..> com.freelanceplaza.commons.fpauthentication.RemoteJwtDecoder
com.freelanceplaza.commons.fpauthentication.RemoteJwtDecoder ..> com.freelanceplaza.commons.fpcommons.caching.TokenCache
com.freelanceplaza.commons.fpauthentication.http.AuthDecoderHttpClient ..> com.fasterxml.jackson.databind.ObjectMapper
com.freelanceplaza.commons.fpauthentication.http.AuthDecoderHttpClient ..> org.springframework.security.oauth2.jwt.Jwt
com.freelanceplaza.commons.fpauthentication.config.AudienceConfig ..> com.freelanceplaza.commons.fpauthentication.config.AudienceConfig
com.freelanceplaza.commons.fpauthentication.config.AuthDecoderConfig ..> com.freelanceplaza.commons.fpauthentication.config.AuthDecoderConfig
com.freelanceplaza.commons.fpauthentication.dto.JwtDto ..> java.time.Instant
com.freelanceplaza.commons.fpauthentication.dto.JwtDto ..> com.freelanceplaza.commons.fpauthentication.dto.JwtDto
com.freelanceplaza.commons.fpauthentication.filters.RequiredClaimFilter ..> org.springframework.security.core.context.SecurityContextHolderStrategy
com.freelanceplaza.commons.fpauthentication.filters.RequiredClaimFilter ..> org.springframework.security.web.authentication.AuthenticationEntryPointFailureHandler
com.freelanceplaza.commons.fpauthentication.filters.RequiredClaimFilter ..> jakarta.servlet.http.HttpServletRequest
com.freelanceplaza.commons.fpauthentication.filters.RequiredClaimFilter ..> jakarta.servlet.http.HttpServletResponse
com.freelanceplaza.commons.fpauthentication.filters.RequiredClaimFilter ..> jakarta.servlet.FilterChain
com.freelanceplaza.commons.fpauthentication.filters.RequiredClaimFilter ..> org.springframework.security.core.AuthenticationException
com.freelanceplaza.commons.fpauthentication.filters.RequiredClaimFilter ..> org.springframework.security.web.util.matcher.AntPathRequestMatcher
com.freelanceplaza.commons.fpauthentication.authorityconverters.FPAuthoritiesConverter ..> org.springframework.security.oauth2.jwt.Jwt
com.freelanceplaza.commons.fpauthentication.authorityconverters.FPAuthoritiesConverter ..> org.springframework.security.core.authority.SimpleGrantedAuthority

' IMPORTS =======
' Java Files Path : /Users/paolo/Work/Tadaah/fp-backend-commons/fp-autentication/src/main/java/
' com.freelanceplaza.commons.fpauthentication.tokenhandlers.BypassTokenHandler

' com.freelanceplaza.commons.fpauthentication.AuthDecoderException

' com.freelanceplaza.commons.fpauthentication.filters.OrganizationFilter

' com.freelanceplaza.commons.fpauthentication.filters.AudienceFilter

' com.freelanceplaza.commons.fpauthentication.RemoteJwtDecoder

' com.freelanceplaza.commons.fpauthentication.http.AuthDecoderHttpClient

' com.freelanceplaza.commons.fpauthentication.config.AudienceConfig

' com.freelanceplaza.commons.fpauthentication.config.AuthDecoderConfig

' com.freelanceplaza.commons.fpauthentication.dto.JwtDto

' com.freelanceplaza.commons.fpauthentication.filters.RequiredClaimFilter

' com.freelanceplaza.commons.fpauthentication.authorityconverters.FPAuthoritiesConverter

' com.freelanceplaza.commons.fpauthentication.authorityconverters.FPAuthoritiesConverter$1



@enduml
